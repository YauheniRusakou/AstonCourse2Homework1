package e.rusakov.sort;

/**
 * Интрефейс для списков.
 *
 * @param <E> - тип передаваемого значения в список
 */
public interface MyList<E> {

    /**
     * Добавляет указанный элемент в конце списка.
     *
     * @param e - элемент, который должен быть добавлен в список
     */
    void add(E e);

    /**
     * Вставляет указанный элемент в указанную позицию в списке.
     *
     * @param e - элемент, который должен быть добавлен в этот список
     * @param index - порядковый номер элемента, куда нужно добавить
     */
    void add(E e, int index);

    /**
     * Возвращает элемент в указанной позиции в этом списке.
     *
     * @param index - индекс элемента для возврата
     * @return элемент в указанной позиции в этом списке
     */
    E get(int index);

    /**
     * Удаляет элемент в указанной позиции в этом списке.
     *
     * @param index - порядковый номер элемента, который нужно удалить
     */
    void delete(int index);

    /**
     * Очищает весь список.
     */
    void clear();

    /**
     * Сортировка списка.
     */
    void sort();

    /**
     * Длина списка.
     *
     * @return - длина списка
     */
    int getSize();
}
